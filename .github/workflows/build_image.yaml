name: Build image

on:
  push:
    branches:
    - '**'
    paths-ignore:
    - '.github/workflows/publish*.yaml'
    - '*.md'

env:
  DOCKER_CACHE_FROM: docker.io/timescale/timescaledb-ha:pg14-compiler
  INSTALL_METHOD: docker-ha
  PG_VERSIONS: "14 13 12"
  TIMESCALE_CLOUDUTILS: "v1.1.7"
  TIMESCALE_HOT_FORGE: "v0.1.37"
  TIMESCALE_PATRONI_K8S_SYNC: "v0.1.2"
  TIMESCALE_OOM_GUARD: "v1.4.1"
  TIMESCALE_STATIC_PRIMARY: "true"
  TIMESCALE_TSDB_ADMIN: "1.0.0"
  TIMESCALEDB_TOOLKIT_EXTENSIONS: 1.6.0 1.7.0 1.8.0 1.10.1 1.11.0
jobs:
  build-image:
    name: Build the default Docker Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push to Amazon ECR
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.GH_PRIVATE_TOKEN }}
          DOCKER_PUBLISH_URLS: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/timescaledb-ha
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: make push-sha
      - name: List docker Images
        run: make list-images
