name: Publish images

on:
  workflow_dispatch:

  push:
    branches:
      - main

  schedule:
    - cron: '0 2 * * 0'

concurrency:
  group: publish-ha-images-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REPOSITORY: timescaledev/timescaledb-ha
  DOCKER_REGISTRY: docker.io

jobs:
  publish:
    name: Publish (${{ matrix.short_platform }} pg${{ matrix.pg_major }}${{ matrix.all }}${{ matrix.oss }})

    strategy:
      fail-fast: false
      matrix:
        platform: [ "amd64", "arm64" ]
        #pg_major: [ "14", "15" ]
        pg_major: [ "15" ]
        all_versions: [ "false", "true" ]
        oss_only: [ "false", "true" ]

        include:
          - platform: amd64
            runner_type: x64
            short_platform: amd
          - platform: arm64
            runner_type: arm64
            short_platform: arm
          - oss_only: "true"
            oss: "-oss"
          - all_versions: "true"
            all: "-all"

    runs-on: [ "self-hosted", "${{ matrix.runner_type }}" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ORG_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup | Docker Context
        run: if [ ! `docker context use ha-builder` ]; then docker context create ha-builder; fi

      - name: Setup | Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: ha-builder

      # default arm action-runners don't have `make`
      - name: Install tools
        run: |
          if ! which -s make >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y build-essential
          fi

      - name: Build and publish (${{ matrix.short_platform }} pg${{ matrix.pg_major }}${{ matrix.all }}${{ matrix.oss }})
        env:
          DOCKER_TAG_POSTFIX: "-multi"
          PLATFORM: ${{ matrix.platform }}
          PG_MAJOR: ${{ matrix.pg_major }}
          ALL_VERSIONS: ${{ matrix.all_versions }}
          OSS_ONLY: ${{ matrix.oss_only }}
          USE_DOCKER_CACHE: "false"
        run: | 
          GIT_REV="${GITHUB_REF#refs/tags/}" make publish-builder publish-release

  publish-combined-manifests:
    name: Publish manifest pg${{ matrix.pg_major }}${{ matrix.docker_tag_postfix }}
    needs:
      - publish

    # us-east-1 means quicker push/pull
    runs-on: [ "self-hosted", "dev-us-east-1" ]

    strategy:
      fail-fast: false
      matrix:
        #pg_major: [ "14", "15" ]
        pg_major: [ "15" ]
        docker_tag_postfix: ["-multi", "-multi-all", "-multi-oss", "-multi-all-oss" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ORG_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_HUB_ACCESS_TOKEN }}

      - name: Publish combined manifest for pg${{ matrix.pg_major }}${{ matrix.docker_tag_postfix }}
        env:
          PG_MAJOR: ${{ matrix.pg_major }}
          VERSION_TAG: pg${{ matrix.pg_major}}${{ matrix.docker_tag_postfix }}
          DOCKER_TAG_POSTFIX: ${{ matrix.docker_tag_postfix }}
        run: make publish-manifests

  check:
    name: Check image pg${{ matrix.pg_major }}${{ matrix.docker_tag_postfix }}
    needs:
      - publish-combined-manifests

    # us-east-1 means quicker push/pull
    runs-on: [ "self-hosted", "dev-us-east-1" ]

    strategy:
      fail-fast: false
      matrix:
        #pg_major: [ "14", "15" ]
        pg_major: [ "15" ]
        docker_tag_postfix: ["-multi", "-multi-all", "-multi-oss", "-multi-all-oss" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ORG_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_HUB_ACCESS_TOKEN }}

      # QEMU is good enough for `make check`
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Check pg${{ matrix.pg_major }}${{ matrix.docker_tag_postfix }}
        env:
          PG_MAJOR: ${{ matrix.pg_major }}
          DOCKER_TAG_POSTFIX: ${{ matrix.docker_tag_postfix }}
        run: make check
