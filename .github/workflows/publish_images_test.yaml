name: Publish images (test)

on:
  workflow_dispatch:

concurrency:
  group: publish-images-${{ github.ref }}-test
  cancel-in-progress: true

jobs:
  publish-image-test:
    name: Publish images (test)

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
        - pg_major: "15"
          pg_versions: "15"
          docker_tag_postfix: '-multi'

        #- pg_major: "15"
        #  pg_versions: "15"
        #  docker_extra_buildargs: ' --build-arg OSS_ONLY=" -DAPACHE_ONLY=1"'
        #  docker_tag_postfix: '-multi-oss'

        #- pg_major: "15"
        #  pg_versions: "15 14 13"
        #  docker_tag_postfix: '-multi-all'

        #- pg_major: "15"
        #  pg_versions: "15 14 13"
        #  docker_extra_buildargs: ' --build-arg OSS_ONLY=" -DAPACHE_ONLY=1"'
        #  docker_tag_postfix: '-multi-all-oss'

    runs-on: [ "dev-eu-west-1", "x64", "non-prod" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get tag name
        id: tag_name
        run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ORG_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup | Docker context for buildx
        run: |
          docker context rm ha-builder || true
          docker context create ha-builder

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          endpoint: ha-builder
          driver: docker-container
          append: |
            - platforms: linux/arm64
              driver-opts:
                - "namespace=actions-runner-system"
                - "requests.cpu=4"
                - "requests.memory=12G"
                - "limits.memory=12G"
                - "nodeselector=savannah/role=arm64"

      - name: Fetch runtime environment
        uses: crazy-max/ghaction-github-runtime@v2

      - name: Build and publish image
        env:
          GIT_REV: ${{ steps.tag_name.outputs.GIT_TAG }}
          DOCKER_REPOSITORY: timescaledev/timescaledb-ha
          DOCKER_REGISTRY: docker.io
          DOCKER_BUILDX_CREATE: "true"
          DOCKER_BUILDX_DESTROY: "true"
          DOCKER_EXTRA_BUILDARGS: ${{ matrix.docker_extra_buildargs }}
          DOCKER_TAG_POSTFIX: ${{ matrix.docker_tag_postfix }}
          PG_MAJOR: ${{ matrix.pg_major }}
          PG_VERSIONS: ${{ matrix.pg_versions }}
#          DOCKER_CACHE_FROM: "type=s3,mode=max,prefix=actions-cache-,access_key_id=${{ secrets.S3_USERNAME }},secret_access_key=${{ secrets.S3_SECRET_KEY }},endpoint_url=${{ secrets.S3_ENDPOINT }},use_path_style=true,region=local,bucket=cache"
#          DOCKER_CACHE_TO: "type=s3,mode=max,prefix=actions-cache-,access_key_id=${{ secrets.S3_USERNAME }},secret_access_key=${{ secrets.S3_SECRET_KEY }},endpoint_url=${{ secrets.S3_ENDPOINT }},use_path_style=true,region=local,bucket=cache"
        run: |
          DOCKER_CACHE_FROM="type=gha,mode=max,url=$ACTIONS_CACHE_URL,token=$ACTIONS_RUNTIME_TOKEN" \
            DOCKER_CACHE_TO="type=gha,mode=max,url=$ACTIONS_CACHE_URL,token=$ACTIONS_RUNTIME_TOKEN" \
            make publish-builder publish

      - name: List docker images
        run: make list-images
